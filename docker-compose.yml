version: '3.8'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - "./mounts/zookeeper-1/data:/var/lib/zookeeper/data"
      - "./mounts/zookeeper-1/logs:/var/lib/zookeeper/log"
    networks:
      - services_network
    restart: on-failure

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - "./mounts/zookeeper-2/data:/var/lib/zookeeper/data"
      - "./mounts/zookeeper-2/logs:/var/lib/zookeeper/log"
    networks:
      - services_network
    restart: on-failure

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    container_name: kafka-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "29092:29092"
    volumes:
      - "./mounts/kafka-1/data:/var/lib/kafka/data"
    networks:
      - services_network
    restart: on-failure

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    container_name: kafka-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "39092:39092"
    volumes:
      - "./mounts/kafka-2/data:/var/lib/kafka/data"
    networks:
      - services_network
    restart: on-failure

  db:
    image: mysql:8.0
    container_name: mysql_app_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    networks:
      - services_network
    restart: on-failure

  emailsender:
    image: samuelemwangi/emailsender:1.0.0-alpha.1
    container_name: emailsender
    environment:
      DB_SERVER: db
      DB_PORT: 3306
      DB_USER: ${DB_USER}
      DB_USER_PASSWORD: ${DB_USER_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SERVER_ZONE: ${DB_SERVER_ZONE}
    ports:
      - "5001:8080"
    networks:
      - services_network
    restart: on-failure

networks:
  services_network:
    name: emailsender_services_network
    driver: bridge
